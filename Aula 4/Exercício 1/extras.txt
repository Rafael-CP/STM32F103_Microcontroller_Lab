;========EXERCICIO 1.1============
		EXPORT 	__main
		AREA 	M_DADOS, DATA, READONLY
vr		dcb		&AB, &DE, &3A, &4F, &D1

		AREA	MEMORIA, DATA, READWRITE
sr1		space	3
	
		AREA 	M_PROGRAMA, CODE, READONLY
__main
		LDR		r0,=sr1		; ENDEREÇO DA MEMORIA
		LDR		r1,=vr		; ENDEREÇO DO VETOR
		
		LDRB	r2,[r1]		; PRIMEIRO VALOR DO VETOR EM R2
TESTE		
		ADD		r1, #&01	; PERCORRE PARA PROX ELEMENTO DO VETOR
		LDRB	r3,[r1]		; REGISTRA SEGUNDO ELEMENTO EM R3
		
		ADD		r2, r2, r3	; SOMA
		STR		r2,[r0]		; GUARDA NA MEMORIA
		B		TESTE
		
LOOP	B		LOOP
		END
		
;========EXERCICIO 1.2============
		EXPORT 	__main
		AREA 	M_DADOS, DATA, READONLY
vr		dcb		&AB, &DE, &3A, &4F, &D1

		AREA	MEMORIA, DATA, READWRITE
sr1		space	3
	
		AREA 	M_PROGRAMA, CODE, READONLY
__main
		LDR		r0,=sr1		; ENDEREÇO DA MEMORIA
		LDR		r1,=vr		; ENDEREÇO DO VETOR
		
		LDRSB	r2,[r1]		; PRIMEIRO VALOR DO VETOR EM R2
TESTE		
		ADD		r1, #&01	; PERCORRE PARA PROX ELEMENTO DO VETOR
		LDRSB	r3,[r1]		; REGISTRA SEGUNDO ELEMENTO EM R3
		
		ADDS	r2, r2, r3	; SOMA
		STR		r2,[r0]		; GUARDA NA MEMORIA
		B		TESTE
		
LOOP	B		LOOP
		END

;========EXERCICIO 2.0============
		EXPORT 	__main
		AREA 	M_DADOS, DATA, READONLY
vr		dcw		&ABCD, &DCBA, &1A2B, &9F5C, &FF23

		AREA	MEMORIA, DATA, READWRITE
sr1		space	4
	
		AREA 	M_PROGRAMA, CODE, READONLY
__main
		LDR		r0,=sr1		; ENDEREÇO DA MEMORIA
		LDR		r1,=vr		; ENDEREÇO DO VETOR
		
		LDRH	r2,[r1]		; PRIMEIRO VALOR DO VETOR EM R2
TESTE		
		ADD		r1, #&02	; PERCORRE PARA PROX ELEMENTO DO VETOR// COMO AGORA SÃO 2 BYTES, PULAMOS 2 CASAS
		LDRH	r3,[r1]		; REGISTRA SEGUNDO ELEMENTO EM R3
		
		ADDS	r2, r2, r3	; SOMA
		STR		r2,[r0]		; GUARDA NA MEMORIA
		B		TESTE
		
LOOP	B		LOOP
		END

;========EXERCICIO 2.1============
		EXPORT 	__main
		AREA 	M_DADOS, DATA, READONLY
vr		dcw		&ABCD, &2CBA, &1A2B, &5F5C, &FF23

		AREA	MEMORIA, DATA, READWRITE
sr1		space	4
	
		AREA 	M_PROGRAMA, CODE, READONLY
__main
		LDR		r0,=sr1		; ENDEREÇO DA MEMORIA
		LDR		r1,=vr		; ENDEREÇO DO VETOR
		
		LDRSH	r2,[r1]		; PRIMEIRO VALOR DO VETOR EM R2
TESTE		
		ADD		r1, #&02	; PERCORRE PARA PROX ELEMENTO DO VETOR// COMO AGORA SÃO 2 BYTES, PULAMOS 2 CASAS
		LDRSH	r3,[r1]		; REGISTRA SEGUNDO ELEMENTO EM R3
		
		ADDS	r2, r2, r3	; SOMA
		STR		r2,[r0]		; GUARDA NA MEMORIA
		B		TESTE
		
LOOP	B		LOOP
		END
;========EXERCICIO 3.0============
		EXPORT 	__main
		AREA 	M_DADOS, DATA, READONLY
vr		dcd		&FABBCCDD, &F2345678, &FA2B3C4D, &FFBFCFDF

		AREA	MEMORIA, DATA, READWRITE
sr1		space	5			; 
sr2		space	1			; CARRY
	
		AREA 	M_PROGRAMA, CODE, READONLY
__main
		LDR		r0,=sr1		; ENDEREÇO DA MEMORIA
		LDR		r1,=vr		; ENDEREÇO DO VETOR
		
		LDR		r2,[r1]		; PRIMEIRO VALOR DO VETOR EM R2
TESTE		
		ADD		r1, #&04	; PERCORRE PARA PROX ELEMENTO DO VETOR// COMO AGORA SÃO 4 BYTES, PULAMOS 4 CASAS
		LDR		r3,[r1]		; REGISTRA SEGUNDO ELEMENTO EM R3
		
		ADDS	r2, r2, r3	; SOMA
		STR		r2,[r0]		; GUARDA NA MEMORIA
		B		TESTE
		
LOOP	B		LOOP
		END

;==========EXERCICIO 3========== 
		EXPORT __main		
		AREA M_DADOS, DATA, READONLY 	; GUARDANDO DADOS NA MEMORIA AUTOMATICAMENTE (FLASH)
valG	DCD		&FA132732				; VALORES DE 4 BYTES
valH	DCD  	&F2321FD4
;		AREA M_DADOS2, DATA, READWRITE 	; ESCREVENDO NA SRAM MANUALMENTE
;valG	space	4
;valH	space	4
		
		AREA MEMORIA, DATA, READWRITE
mem1	space	4
mem2	space	2						; PODE SER 1, FOI UTILIZADO 2 PARA MELHOR ORGANIZAÇÃO	
						
		AREA M_PROGRAMA, CODE, READONLY
__main	
		;	REGISTRA ENDEREÇOS
		LDR 	R0,=valG	
		LDR		R1,=valH
		LDR		R2,=mem1	; 4 BYTES MENOS SIGNIFICATIVOS
		MOV		R6,#0		; ZERA REGISTRO R6 
		
		;	REGISTRA VALORES CONTIDOS NOS ENDEREÇOS
		LDR		R3,[R0]		; VALORES DE 4 BYTES
		LDR		R4,[R1]
		ADDS	R5, R3, R4 	; AGORA ADDS EH NECESSARIO DEVIDO AO TAMANHO DOS BYTES UTILIZADOS
		STR		R5,[R2]		; AGORA DEVE SER SOMENTE STR PARA GUARDAR TODOS OS BYTES NECESSARIOS
		
		ADC		R6,R6,#0 	; FARA R6= R6+0+Carry
		LDR		R2,=mem2	; 1 BYTE DE CARRY
		STRH	R6,[R2]
LOOP	B		LOOP
		END